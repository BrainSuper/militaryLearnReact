{"version":3,"file":"static/js/466.50b822b4.chunk.js","mappings":"0KACA,EAA0B,yBAA1B,EAAsE,kCAAtE,EAAyH,gCAAzH,EAA6K,mCAA7K,EAAuN,sBAAvN,EAAuP,yBAAvP,EAAgS,+B,mBCOhS,EAJe,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAhB,UAA8B,SAAC,KAAD,CAASC,GAAE,mBAAcH,EAAMI,IAA/B,SAAsCJ,EAAMK,UCGrF,EAJgB,SAACL,GACb,OAAO,gBAAKC,UAAWC,EAAhB,SAAkCF,EAAMM,W,uCCG7CC,GAAeC,EAAAA,EAAAA,GAAiB,KAElCC,EAAkB,YAAqB,IAAnBC,EAAkB,EAAlBA,aACpB,OAAO,kBAAMC,SAAUD,EAAhB,WACH,SAACE,EAAA,EAAD,CAAOX,UAAWC,EAAuBW,SAAU,CAACC,EAAAA,EAAUP,GAAeQ,KAAK,OAAOV,KAAK,UAAUW,UAAWC,EAAAA,KACnH,iDAIRR,GAAkBS,EAAAA,EAAAA,GAAU,CAACC,KAAM,mBAAjBD,CAAqCT,GACvD,IAoBA,EApBgB,SAAC,GAA4D,IAA3DW,EAA0D,EAA1DA,YAA0D,IAA7CC,YAAcC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAItD,OACI,iBAAKtB,UAAWC,EAAhB,WACI,qCACA,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,EAAYE,KAAI,SAAAC,GAAM,OAAI,SAAC,EAAD,CAAQpB,KAAMoB,EAAOpB,KAAMD,GAAIqB,EAAOrB,WAErE,gBAAKH,UAAWC,EAAhB,SACKqB,EAAYC,KAAI,SAAAE,GAAC,OAAI,SAAC,EAAD,CAASpB,QAASoB,EAAEpB,mBAGlD,SAACG,EAAD,CAAiBE,SAdH,SAACgB,GACnBP,EAAYO,EAASrB,gB,8ECjBvBsB,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAkB3B,EAfyB,SAACE,GAAe,IAE/BC,EAF8B,0IAGhC,WACI,OAAKC,KAAKlC,MAAM8B,QAGL,SAACE,GAAD,UAAeE,KAAKlC,SAFpB,SAAC,KAAD,CAAUG,GAAI,eALG,GAEJgC,EAAAA,WAUhC,OADiCC,EAAAA,EAAAA,IAAQR,EAARQ,CAAyBH,ICA9D,GAAeI,EAAAA,EAAAA,IACXC,GACAF,EAAAA,EAAAA,KAdoB,SAACP,GACrB,MAAO,CACHR,YAAaQ,EAAMR,gBAGA,SAACkB,GACxB,MAAO,CACHnB,YAAa,SAACd,GACViC,GAASC,EAAAA,EAAAA,GAAyBlC,SAI9C,CAGEmC","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__gVA+V\",\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__2c5Gs\",\"dialogs__users\":\"Dialogs_dialogs__users__m9xYz\",\"dialogs__messages\":\"Dialogs_dialogs__messages__HL-1Q\",\"user\":\"Dialogs_user__HxUL8\",\"message\":\"Dialogs_message__VkkZU\",\"dialogs__send\":\"Dialogs_dialogs__send__BBe5z\"};","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialog = (props) => {\r\n    return <div className={classes.user}><NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink></div>\r\n}\r\n\r\nexport default Dialog;","import React from \"react\";\r\nimport classes from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css';\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../../custom/formControl/formControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nlet SendMessageForm = ({handleSubmit}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <Field className={classes.dialogs__send} validate={[required, maxLength100]} type='text' name='message' component={Textarea}></Field>\r\n        <button>Send message</button>\r\n    </form>\r\n};\r\n\r\nSendMessageForm = reduxForm({form: 'sendMessageForm'})(SendMessageForm);\r\nconst Dialogs = ({sendMessage, dialogsPage: {dialogsData, messageData}}) => {\r\n    const onSendMessage = (formData) => {\r\n        sendMessage(formData.message);\r\n    }\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <h1>Dialogs</h1>\r\n            <div className={classes.dialogs__wrapper}>\r\n                <div className={classes.dialogs__users}>\r\n                    {dialogsData.map(dialog => <Dialog name={dialog.name} id={dialog.id}/>)}\r\n                </div>\r\n                <div className={classes.dialogs__messages}>\r\n                    {messageData.map(m => <Message message={m.message}/>)}\r\n                </div>\r\n            </div>\r\n            <SendMessageForm onSubmit={onSendMessage} />\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nconst withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return <Navigate to={'/login'}/>\r\n            } else {\r\n                return <Component {...this.props}/>;\r\n            }\r\n        }\r\n    }\r\n    let connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return connectedRedirectComponent;\r\n}\r\n\r\nexport default withAuthRedirect;","import React from \"react\";\r\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageActionCreator(message));\r\n        }\r\n    }\r\n}\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs);"],"names":["props","className","classes","to","id","name","message","maxLength100","maxLengthCreator","SendMessageForm","handleSubmit","onSubmit","Field","validate","required","type","component","Textarea","reduxForm","form","sendMessage","dialogsPage","dialogsData","messageData","map","dialog","m","formData","mapStateToProps","state","isAuth","auth","Component","RedirectComponent","this","React","connect","compose","withAuthRedirect","dispatch","sendMessageActionCreator","Dialogs"],"sourceRoot":""}